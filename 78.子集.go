/*
 * @lc app=leetcode.cn id=78 lang=golang
 *
 * [78] 子集
 */

// @lc code=start

/*******错误的写法********/
// func subsets(nums []int) [][]int {
// 	arr := [][]int{}
// 	arr = append(arr, []int{})

// 	for i := 0; i < len(nums); i++ {
// 		for _, v := range arr {
// 			test := append(v, nums[i])
// 			arr = append(arr, test)
// 		}
// 	}
// 	return arr
// }

func subsets(nums []int) [][]int {

	arr := [][]int{}
	arr = append(arr, []int{})

	for i := 0; i < len(nums); i++ {
		for _, v := range arr {
			tmp := make([]int, len(v))
			copy(tmp, v)
			tmp = append(tmp, nums[i])
			fmt.Println("test = ", tmp)
			arr = append(arr, tmp)
			fmt.Println("arr = ", arr)
		}
	}
	return arr
	/*******此种做法的打印结果******/
	// test = [0]
	// arr = [[] [0]]
	// test = [3]
	// arr = [[] [0] [3]]
	// test = [0 3]
	// arr = [[] [0] [3] [0 3]]
	// test = [5]
	// arr = [[] [0] [3] [0 3] [5]]
	// test = [0 5]
	// arr = [[] [0] [3] [0 3] [5] [0 5]]
	// test = [3 5]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5]]
	// test = [0 3 5]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5]]
	// test = [7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7]]
	// test =  [0 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7]]
	// test = [3 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7]]
	// test = [0 3 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7]]
	// test = [5 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7]]
	// test = [0 5 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7]]
	// test = [3 5 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7]]
	// test = [0 3 5 7]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7]]
	// test =  [9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9]]
	// test = [0 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9]]
	// test = [3 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9]]
	// test = [0 3 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9]]
	// test = [5 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9]]
	// test = [0 5 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9]]
	// test = [3 5 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9]]
	// test = [0 3 5 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9]]
	// test =  [7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9]]
	// test = [0 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9]]
	// test = [3 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9]]
	// test = [0 3 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9]]
	// test = [5 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9] [5 7 9]]
	// test = [0 5 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9] [5 7 9] [0 5 7 9]]
	// test = [3 5 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9] [5 7 9] [0 5 7 9] [3 5 7 9]]
	// test = [0 3 5 7 9]
	// arr = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9] [5 7 9] [0 5 7 9] [3 5 7 9] [0 3 5 7 9]]
	// end = [[] [0] [3] [0 3] [5] [0 5] [3 5] [0 3 5] [7] [0 7] [3 7] [0 3 7] [5 7] [0 5 7] [3 5 7] [0 3 5 7] [9] [0 9] [3 9] [0 3 9] [5 9] [0 5 9] [3 5 9] [0 3 5 9] [7 9] [0 7 9] [3 7 9] [0 3 7 9] [5 7 9] [0 5 7 9] [3 5 7 9] [0 3 5 7 9]]

}

// @lc code=end
